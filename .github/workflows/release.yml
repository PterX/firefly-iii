name: 'Code - Create new release'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'develop'
  schedule:
    - cron:  '0 3 * * MON,THU'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, zip, bcmath
      - name: Cleanup changelog
        id: cleanup-changelog
        uses: JC5/firefly-iii-dev@v34
        with:
          action: 'ff3:changelog'
          output: ''
        env:
          FIREFLY_III_ROOT: /github/workspace
          GH_TOKEN: ${{ secrets.CHANGELOG_TOKEN }}
      - name: Extract changelog
        id: extract-changelog
        uses: JC5/firefly-iii-dev@v34
        with:
          action: 'ff3:extract-changelog'
          output: 'output'
        env:
          FIREFLY_III_ROOT: /github/workspace
          GH_TOKEN: ""
      - name: Replace version
        id: replace-version
        uses: JC5/firefly-iii-dev@v34
        with:
          action: 'ff3:version'
          output: ''
        env:
          FIREFLY_III_ROOT: /github/workspace
          GH_TOKEN: ""
          FF_III_VERSION: ${{ github.event_name == 'schedule' && 'develop' || github.event.inputs.version }}
      - name: Generate JSON v1
        id: json-v1
        uses: JC5/firefly-iii-dev@v34
        with:
          action: 'ff3:json-translations v1'
          output: ''
        env:
          FIREFLY_III_ROOT: /github/workspace
          GH_TOKEN: ''
      - name: Generate JSON v2
        id: json-v2
        uses: JC5/firefly-iii-dev@v34
        with:
          action: 'ff3:json-translations v2'
          output: ''
        env:
          FIREFLY_III_ROOT: /github/workspace
          GH_TOKEN: ''
      - name: Code cleanup
        id: code-cleanup
        uses: JC5/firefly-iii-dev@v34
        with:
          action: 'ff3:code'
          output: ''
        env:
          FIREFLY_III_ROOT: /github/workspace
          GH_TOKEN: ''
      - name: Build new JS
        run: |
          pwd
          npm install
          npm run build
      - name: Build old JS
        id: old-js
        uses: JC5/firefly-iii-dev@v34
        with:
          action: 'ff3:old-js'
          output: ''
        env:
          FIREFLY_III_ROOT: /github/workspace
          GH_TOKEN: ''
      - name: Run CI
        run: |
          rm -rf vendor composer.lock
          composer validate --strict
          composer update --no-dev --no-scripts --no-plugins -q
          sudo chown -R runner:docker resources/lang
          .ci/phpcs.sh
      - name: Release
        run: |
          sudo timedatectl set-timezone Europe/Amsterdam
          git config user.name github-actions
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config advice.addIgnoredFile false

          [[ -z $(git status --untracked-files=normal --porcelain) ]] && echo "this branch is clean, no need to push..." && exit 0;
          releaseName=$version-$(date +'%Y%m%d')
          zipName=FireflyIII-develop.zip

          git add -A
          if test -f "output.txt"; then
            git reset output.txt
          fi
          git commit -m "Auto commit for release '$version' on $(date +'%Y-%m-%d')" || true
          git push

          # zip everything
          zip -rq $zipName . -x "*.git*" "*.ci*" "*.github*" "*node_modules*" "*output.txt*"

          echo "Create default release."

          gh release create $releaseName -F output.txt -t "$releaseName" --verify-tag
          # add zip file to release.
          gh release upload $releaseName $zipName
          rm output.txt
          rm $zipName
        env:
          GH_TOKEN: ${{ github.token }}
          version: ${{ github.event_name == 'schedule' && 'develop' || github.event.inputs.version }}
